"use strict";(self.webpackChunkme=self.webpackChunkme||[]).push([[1469],{2308:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var t=i(4848),o=i(8453);const a={slug:"essential-modules-for-developing-applications-with-fastapi-p1-migration",title:"Essential modules for developing applications with FastAPI (P1 - Migration)",authors:["pxuanbach"],tags:["alembic","migration","fastapi","python","essential-modules-fastapi"],date:"2024-03-31T10:00",image:"/img/02_essential-modules-for-developing-applications-with-fastapi-p1/featured.png"},s=void 0,r={permalink:"/blog/essential-modules-for-developing-applications-with-fastapi-p1-migration",source:"@site/blog/02_essential-modules-for-developing-applications-with-fastapi-p1/index.md",title:"Essential modules for developing applications with FastAPI (P1 - Migration)",description:"Today, I say \u201cHi FastAPI\u201d.",date:"2024-03-31T10:00:00.000Z",tags:[{label:"alembic",permalink:"/blog/tags/alembic"},{label:"migration",permalink:"/blog/tags/migration"},{label:"fastapi",permalink:"/blog/tags/fastapi"},{label:"python",permalink:"/blog/tags/python"},{label:"essential-modules-fastapi",permalink:"/blog/tags/essential-modules-fastapi"}],readingTime:4.78,hasTruncateMarker:!0,authors:[{name:"Bach Pham",title:"Software Engineer",url:"https://github.com/pxuanbach",imageURL:"https://avatars.githubusercontent.com/u/55500268?v=4",key:"pxuanbach"}],frontMatter:{slug:"essential-modules-for-developing-applications-with-fastapi-p1-migration",title:"Essential modules for developing applications with FastAPI (P1 - Migration)",authors:["pxuanbach"],tags:["alembic","migration","fastapi","python","essential-modules-fastapi"],date:"2024-03-31T10:00",image:"/img/02_essential-modules-for-developing-applications-with-fastapi-p1/featured.png"},unlisted:!1,prevItem:{title:"Essential modules for developing applications with FastAPI (P2 - Logging)",permalink:"/blog/essential-modules-for-developing-applications-with-fastapi-p2-logging"},nextItem:{title:"Zero-downtime Deployments with Docker Compose & Nginx",permalink:"/blog/zero-downtime-deployment-with-docker-compose-nginx"}},l={authorsImageUrls:[void 0]},c=[{value:"Framework/Library version",id:"frameworklibrary-version",level:2},{value:"Migration",id:"migration",level:2},{value:"Directory structure",id:"directory-structure",level:3},{value:"alembic.ini",id:"alembicini",level:3},{value:"env.py",id:"envpy",level:3},{value:"script.py.mako",id:"scriptpymako",level:3},{value:"How to use?",id:"how-to-use",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"References",id:"references",level:2}];function m(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Today, I say \u201cHi FastAPI\u201d."}),"\n",(0,t.jsxs)(n.p,{children:["Recently, ",(0,t.jsx)(n.a,{href:"https://fastapi.tiangolo.com/",children:"FastAPI"})," has become increasingly popular, partly driven by the current trend of AI innovation. In my opinion, being modern, robust, fast, and micro is what makes me fall in love with this framework."]}),"\n",(0,t.jsx)(n.p,{children:"This post comes with some modules that you will want to have in your project."}),"\n",(0,t.jsx)(n.h2,{id:"frameworklibrary-version",children:"Framework/Library version"}),"\n",(0,t.jsxs)(n.p,{children:["This project uses ",(0,t.jsx)(n.a,{href:"https://www.python.org/",children:"Python"})," 3.10 as the environment and ",(0,t.jsx)(n.a,{href:"https://python-poetry.org/",children:"Poetry"})," as the package manager."]}),"\n",(0,t.jsx)(n.p,{children:"The code and examples in this post will use frameworks/libraries with the following versions."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'showLineNumbers title="./pyproject.toml"',children:'[tool.poetry.dependencies]\npython = "^3.10"\nuvicorn = {extras = ["standard"], version = "^0.24.0.post1"}\nfastapi = "^0.109.1"\npython-multipart = "^0.0.7"\nemail-validator = "^2.1.0.post1"\npasslib = {extras = ["bcrypt"], version = "^1.7.4"}\ntenacity = "^8.2.3"\npydantic = ">2.0"\nemails = "^0.6"\ngunicorn = "^21.2.0"\njinja2 = "^3.1.2"\nalembic = "^1.12.1"\npython-jose = {extras = ["cryptography"], version = "^3.3.0"}\nhttpx = "^0.25.1"\npsycopg = {extras = ["binary"], version = "^3.1.13"}\n\nsqlmodel = "^0.0.16"\n\n# Pin bcrypt until passlib supports the latest\nbcrypt = "4.0.1"\npydantic-settings = "^2.2.1"\nsentry-sdk = {extras = ["fastapi"], version = "^1.40.6"}\npsycopg2 = "^2.9.9"\nasyncpg = "^0.29.0"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"migration",children:"Migration"}),"\n",(0,t.jsx)(n.p,{children:"If you work with SQL databases, these are important components you need to set up. What I want to talk about is Alembic."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://alembic.sqlalchemy.org/",children:"Alembic"}),"\xa0is a lightweight database migration tool for usage with the\xa0",(0,t.jsx)(n.a,{href:"https://www.sqlalchemy.org/",children:"SQLAlchemy"}),"\xa0Database Toolkit for Python."]}),"\n",(0,t.jsx)(n.p,{children:"To add or initialize a module, you can use the following commands:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"poetry add alembic  # pip install alembic\n\nalembic init migrations\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Note that \u201cmigrations\u201d is the name of the directory where you want to store your migration versions."})}),"\n",(0,t.jsx)(n.h3,{id:"directory-structure",children:"Directory structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plaintext",children:"Project/\n\u251c\u2500\u2500 app/\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 migrations/\n\u2502   \u251c\u2500\u2500 versions/\n\u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502   \u251c\u2500\u2500 README\n\u2502   \u251c\u2500\u2500 env.py\n\u2502   \u2514\u2500\u2500 script.py.mako\n\u251c\u2500\u2500 alembic.ini\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 poetry.lock\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"alembicini",children:"alembic.ini"}),"\n",(0,t.jsxs)(n.p,{children:["I will use its default configuration. Or go to this link ",(0,t.jsx)(n.a,{href:"https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file",children:"https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file"})," to get more details."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'showLineNumbers title="./alembic.ini"',children:"# A generic, single database configuration.\n\n[alembic]\n# path to migration scripts\nscript_location = migrations\n\n# template used to generate migration files\n# file_template = %%(rev)s_%%(slug)s\n\n# sys.path path, will be prepended to sys.path if present.\n# defaults to the current working directory.\nprepend_sys_path = .\n...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"envpy",children:"env.py"}),"\n",(0,t.jsxs)(n.p,{children:["In this version of FastAPI, ",(0,t.jsx)(n.a,{href:"https://sqlmodel.tiangolo.com/",children:"SQLModel"})," appears as an integrated version of SQLAlchemy and Pydantic and is recommended for use in the official documentation."]}),"\n",(0,t.jsxs)(n.p,{children:["So instead of using ",(0,t.jsx)(n.code,{children:"DeclarativeMeta"}),", we will use ",(0,t.jsx)(n.code,{children:"SQLModel.metadata"})," in Alembic\u2019s env."]}),"\n",(0,t.jsxs)(n.p,{children:["After completing the steps above, the ",(0,t.jsx)(n.code,{children:"env.py"}),"  will look like this."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'showLineNumbers {6-7,22} title="./migrations/env.py"',children:'from logging.config import fileConfig\nfrom sqlalchemy import engine_from_config\nfrom sqlalchemy import pool\nfrom alembic import context\n\nfrom app.core.db import SQLModel       # <--- CHANGE HERE\nfrom app.core.config import settings   # <--- CHANGE HERE\n\n# this is the Alembic Config object, which provides\n# access to the values within the .ini file in use.\nconfig = context.config\n\n# Interpret the config file for Python logging.\n# This line sets up loggers basically.\nif config.config_file_name is not None:\n    fileConfig(config.config_file_name)\n\n# add your model\'s MetaData object here\n# for \'autogenerate\' support\n# from myapp import mymodel\n# target_metadata = mymodel.Base.metadata\ntarget_metadata = SQLModel.metadata    # <--- CHANGE HERE\n\n# other values from the config, defined by the needs of env.py,\n# can be acquired:\n# my_important_option = config.get_main_option("my_important_option")\n# ... etc.\nconfig.set_section_option("alembic", "sqlalchemy.url", str(settings.SQLALCHEMY_DATABASE_URI))  # <--- CHANGE HERE\n\ndef run_migrations_offline() -> None:\n...\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["One note is that to achieve the Alembic ",(0,t.jsx)(n.code,{children:"\u2014autogenerate"})," option, you must import the entity representing your table where you import SQLModel into env. For example ",(0,t.jsx)(n.code,{children:"app/core/db.py"}),":"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'showLineNumbers {22,24-26} title="./app/core/db.py"',children:"from sqlalchemy.ext.asyncio import AsyncSession, create_async_engine\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\nfrom sqlmodel import SQLModel, create_engine\n\nfrom app.core.config import settings\n\nasync_engine = create_async_engine(settings.SQLALCHEMY_DATABASE_URI_ASYNC)\nasync_session_maker = sessionmaker(\n    async_engine,\n    class_=AsyncSession,\n    expire_on_commit=False,\n    autocommit=False,\n    autoflush=False,\n)\n\n# We still have a second old style sync SQLAlchemy engine for shell and alembic\nengine = create_engine(settings.SQLALCHEMY_DATABASE_URI, future=True)\nSessionLocal = sessionmaker(bind=engine, autocommit=False, autoflush=False)\n\nBase = declarative_base()\nSQLModel.metadata = Base.metadata\n\n# import all models to automatically create migration through Alembic\nfrom app.modules.users.model import UserInDb\n...\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["Alternatively, if you organize your database models within a directory, you can leverage the ",(0,t.jsx)(n.code,{children:"__init__.py"})," file to gather all the models you want Alembic to create migrations automatically. For instance ",(0,t.jsx)(n.code,{children:"app/models/__init__.py"}),":"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'showLineNumbers {3,4} title="./app/models/__init__.py"',children:"from app.core.db import SQLModel\n\nfrom .user import UserInDb\nfrom .item import ItemInDb\n...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["And ",(0,t.jsx)(n.code,{children:"migrations/env.py"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'showLineNumbers {6} title="./migrations/env.py"',children:"from logging.config import fileConfig\nfrom sqlalchemy import engine_from_config\nfrom sqlalchemy import pool\nfrom alembic import context\n\nfrom app.models import SQLModel       # <--- CHANGE HERE\n...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"scriptpymako",children:"script.py.mako"}),"\n",(0,t.jsxs)(n.p,{children:["To make things go smoothly, don't forget to import the ",(0,t.jsx)(n.code,{children:"sqlmodel"})," into this file."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'showLineNumbers {12} title="./migrations/script.py.mako"',children:'"""${message}\n\nRevision ID: ${up_revision}\nRevises: ${down_revision | comma,n}\nCreate Date: ${create_date}\n\n"""\nfrom typing import Sequence, Union\n\nfrom alembic import op\nimport sqlalchemy as sa\nimport sqlmodel             # <--- CHANGE HERE\n${imports if imports else ""}\n...\n'})}),"\n",(0,t.jsx)(n.h3,{id:"how-to-use",children:"How to use?"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"How to use migration",src:i(1002).A+"",width:"994",height:"221"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To create a new revision:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'alembic revision --autogenerate -m "message"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To migrate:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"alembic upgrade head\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To undo the latest migration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"alembic downgrade -1\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To roll back to a specific revision:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"alembic downgrade <<revision_id>>\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"We discussed an essential module in developing applications with FastAPI: Migration. By carefully and effectively using this module, we can build and maintain powerful and flexible FastAPI applications. Hopefully, this article has given you the overview and knowledge needed to use this important module in your projects."}),"\n",(0,t.jsxs)(n.p,{children:["If you need a project to run a demo on your environment, here are my\xa0",(0,t.jsx)(n.a,{href:"https://github.com/pxuanbach/fastapi-essential-modules",children:"Git repository"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"See you again!"}),"\n",(0,t.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://stackoverflow.com/questions/68932099/how-to-get-alembic-to-recognise-sqlmodel-database-model",children:"How to get Alembic to recognise SQLModel database model?"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://alembic.sqlalchemy.org/en/latest/tutorial.html",children:"Tutorial \u2014 Alembic 1.13.2 documentation (sqlalchemy.org)"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},1002:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/how-to-use-migration-9682a2c5aba69503ba37bce6f766bb1b.png"},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var t=i(6540);const o={},a=t.createContext(o);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);